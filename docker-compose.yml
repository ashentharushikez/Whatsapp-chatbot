services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    networks:
      - chatbot_network
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

  python-api:
    build: 
      context: ./python-server
      dockerfile: Dockerfile
    container_name: python-api
    hostname: python-api
    networks:
      - chatbot_network
    ports:
      - "5000:5000"
    environment:
      - PYTHONUNBUFFERED=1
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    env_file:
      - ./.env
    volumes:
      - ./python-server:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  whatsapp-bot:
    build: 
      context: ./node-server
      dockerfile: Dockerfile
    container_name: whatsapp-bot
    hostname: whatsapp-bot
    networks:
      - chatbot_network
    volumes:
      - ./.wwebjs_auth:/app/.wwebjs_auth
    environment:
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - API_URL=http://python-api:5000
    depends_on:
      python-api:
        condition: service_healthy
    restart: always

networks:
  chatbot_network:
    name: chatbot_network
    driver: bridge